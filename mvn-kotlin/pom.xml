<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>tech.harmless</groupId>
  <artifactId>TODO</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>TODO</name>
  <url>https://github.com/harmless-tech/TODO</url>
  <licenses>
    <license>
      <name>TODO</name>
      <url>https://github.com/harmless-tech/TODO/blob/main/LICENSE</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/harmless-tech/TODO/issues</url>
  </issueManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.targetEncoding>UTF-8</project.build.targetEncoding>
    <maven.compiler.release>24</maven.compiler.release>
    <project.build.outputTimestamp>2023-01-01T00:00:00Z</project.build.outputTimestamp>

    <project.mainClass>tech.harmless.TODO.KAppKt</project.mainClass>

    <kotlin.version>2.2.20</kotlin.version>
    <!-- <kotlin.compiler.incremental>true</kotlin.compiler.incremental>-->

    <tinylog.version>2.7.0</tinylog.version>
    <junit.version>5.13.4</junit.version>
  </properties>

  <dependencies>
    <!-- Compile -->
    <!-- https://mvnrepository.com/artifact/org.jspecify/jspecify -->
    <dependency>
      <groupId>org.jspecify</groupId>
      <artifactId>jspecify</artifactId>
      <version>1.0.0</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.tinylog/tinylog-api -->
    <dependency>
      <groupId>org.tinylog</groupId>
      <artifactId>tinylog-api</artifactId>
      <version>${tinylog.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.tinylog/tinylog-impl -->
    <dependency>
      <groupId>org.tinylog</groupId>
      <artifactId>tinylog-impl</artifactId>
      <version>${tinylog.version}</version>
    </dependency>

    <!-- Kotlin -->
    <!-- https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-stdlib -->
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib</artifactId>
      <version>${kotlin.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-reflect -->
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
      <version>${kotlin.version}</version>
    </dependency>

    <!-- Testing -->
    <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-test-junit -->
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-test-junit</artifactId>
      <version>${kotlin.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <targetPath>${project.build.outputDirectory}/META-INF/tech/harmless/TODO</targetPath>
        <directory>./</directory>
        <includes>
          <include>LICENSE</include>
        </includes>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>
        <configuration>
          <jvmTarget>${maven.compiler.release}</jvmTarget>
        </configuration>
        <executions>
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.14.0</version>
        <configuration>
          <release>${maven.compiler.release}</release>
          <showWarnings>true</showWarnings>
          <compilerArgs>
            <compilerArg>-Xlint:all</compilerArg>
          </compilerArgs>
        </configuration>
        <executions>
          <execution>
            <id>default-compile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>java-compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <phase>compile</phase>
          </execution>
          <execution>
            <id>java-test-compile</id>
            <goals>
              <goal>testCompile</goal>
            </goals>
            <phase>test-compile</phase>
          </execution>
        </executions>
      </plugin>

      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-resources-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
      </plugin>

      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-clean-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.5.0</version>
      </plugin>

      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-dependency-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <outputDirectory>${project.build.directory}/libs</outputDirectory>
          <overWriteIfNewer>true</overWriteIfNewer>
          <includeScope>runtime</includeScope>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <phase>prepare-package</phase>
          </execution>
        </executions>
      </plugin>

      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.4.2</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>libs/</classpathPrefix>
              <mainClass>${project.mainClass}</mainClass>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <id>dokka-jar</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <classifier>javadoc</classifier>
              <classesDirectory>${project.build.directory}/dokka</classesDirectory>
              <skipIfEmpty>true</skipIfEmpty>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.4</version>
      </plugin>

      <!-- https://mvnrepository.com/artifact/org.jetbrains.dokka/dokka-maven-plugin -->
      <plugin>
        <groupId>org.jetbrains.dokka</groupId>
        <artifactId>dokka-maven-plugin</artifactId>
        <version>2.0.0</version>
        <configuration>
          <sourceDirectories>
            <dir>${project.basedir}/src/main</dir>
          </sourceDirectories>
        </configuration>
        <executions>
          <execution>
            <id>dokka-javadoc</id>
            <goals>
              <goal>dokka</goal>
            </goals>
            <phase>prepare-package</phase>
          </execution>
          <execution>
            <id>dokka-site</id>
            <goals>
              <goal>dokka</goal>
            </goals>
            <phase>pre-site</phase>
          </execution>
        </executions>
      </plugin>

      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-source-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
      </plugin>

      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-enforcer-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.6.1</version>
        <configuration>
          <rules>
            <requireMavenVersion>
              <version>3.9.0</version>
            </requireMavenVersion>
          </rules>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>

      <!-- https://mvnrepository.com/artifact/org.codehaus.mojo/versions-maven-plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.19.0</version>
      </plugin>

      <!-- https://mvnrepository.com/artifact/org.codehaus.mojo/license-maven-plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>2.6.0</version>
      </plugin>

      <!-- https://mvnrepository.com/artifact/org.codehaus.mojo/exec-maven-plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <mainClass>${project.mainClass}</mainClass>
          <executable>${project.name}</executable>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- https://mvnrepository.com/artifact/com.diffplug.spotless/spotless-maven-plugin -->
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.46.1</version>
        <configuration>
          <kotlin>
            <includes>
              <include>src/main/kotlin/**/*.kt</include>
              <include>src/test/kotlin/**/*.kt</include>
            </includes>
            <ktfmt>
              <!-- https://github.com/facebook/ktfmt/releases -->
              <version>0.56</version>
              <style>KOTLINLANG</style>
              <removeUnusedImports>true</removeUnusedImports>
              <manageTrailingCommas>true</manageTrailingCommas>
            </ktfmt>
            <licenseHeader>
              <file>${project.basedir}/other/license-header</file>
            </licenseHeader>
          </kotlin>
          <pom>
            <sortPom/>
          </pom>
          <markdown>
            <includes>
              <include>**/*.md</include>
            </includes>
            <excludes>
              <exclude>target/**</exclude>
              <exclude>tmp/**</exclude>
            </excludes>
            <flexmark/>
          </markdown>
          <json>
            <includes>
              <include>**/**.json</include>
            </includes>
            <excludes>
              <exclude>target/**</exclude>
              <exclude>tmp/**</exclude>
            </excludes>
            <gson/>
          </json>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>

      <!-- https://mvnrepository.com/artifact/com.github.spotbugs/spotbugs-maven-plugin -->
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>4.9.6.0</version>
        <configuration>
          <plugins>
            <!-- https://mvnrepository.com/artifact/com.h3xstream.findsecbugs/findsecbugs-plugin -->
            <plugin>
              <groupId>com.h3xstream.findsecbugs</groupId>
              <artifactId>findsecbugs-plugin</artifactId>
              <version>1.14.0</version>
            </plugin>
          </plugins>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>native</id>
      <build>
        <plugins>
          <!-- https://mvnrepository.com/artifact/org.graalvm.buildtools/native-maven-plugin -->
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>0.11.0</version>
            <extensions>true</extensions>
            <configuration>
              <mainClass>${project.mainClass}</mainClass>
              <buildArgs>
                <!-- <buildArg>-O3</buildArg> -->
                <!-- <buildArg>-g</buildArg> -->
                <buildArg>--enable-sbom</buildArg>
              </buildArgs>
              <outputDirectory>${project.build.directory}/exe</outputDirectory>
            </configuration>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>compile-no-fork</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
